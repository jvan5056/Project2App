//module dependencies
const app = require('../index'); //my server is called index

const debug = require('debug')('Project2App:server');

const http = require('http');

//Get port from envoronment and store in Express

const port = normalizePort(process.env.PORT || '3000');

app.set('port', port);


//Create HTTP server

const server = http.createServer(app);

//listen on provided port, on all network interfaces

server.listen(port);

server.on('error', onError);

server.on('listening', onListening);

//normalize port to number or string

function normalizePort(val) {
    const port = parseInt(val, 10)

    if(isNaN(port)){

        return val;
    }
    if(port >= 0){

        return port;
    }

    return false;
};


//Event listened fir HTTP server "error" event

function onError(error){
    if(error.syscall !== 'listen'){

        throw error;

    }

    var bind = typeof port === 'string'

     ? 'Pipe' + port
     : 'Port' + port;

     //handle specific listen errors with friendly messages

     switch(error.code){

        case 'EACCES':

         console.error(bind + 'requires elevated privileges');
         process.exit(1);
         break;

        case 'EADDRINUSE':

           console.error(bind + 'is already in use');
           process.exit(1);
           break;
           
           default:
               throw error;
     }
}

//Event listened for HTTP server "listening" event

function onListening(){
    var addr = server.address();
    var bind = typeof addr ==='string'
       ? 'pipe' + addr
       : 'port' + addr.port;

    debug('Listening on ' + bind)
}